// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  isAdmin   Boolean  @default(false)

  uploadedFiles File[] @relation("UserUploadedFiles")
  receivedFiles File[] @relation("UserReceivedFiles")

  notifications Notification[] @relation("UserNotifications")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @id @default(uuid())

  url String
  path String
  name String?
  size String?
  type String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  uploadedBy User? @relation("UserUploadedFiles", fields: [uploadedById], references: [id])
  uploadedById String?
  receivedBy User? @relation("UserReceivedFiles", fields: [receivedById], references: [id])
  receivedById String?

  isAdminOnlyPrivateFile Boolean @default(false)

  @@index([uploadedById]) 
  @@index([receivedById])
}

model Notification {
  id        String   @id @default(uuid())
  title String
  message String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("UserNotifications", fields: [userId], references: [id])
  userId String
}